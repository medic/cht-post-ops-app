{
  "locales": [
    {
      "code": "en",
      "name": "English"
    },
    {
      "code": "es",
      "name": "Español (Spanish)"
    },
    {
      "code": "fr",
      "name": "Français (French)"
    },
    {
      "code": "ne",
      "name": "नेपाली (Nepali)"
    },
    {
      "code": "sw",
      "name": "Kiswahili (Swahili)"
    }
  ],
  "locale": "en",
  "locale_outgoing": "en",
  "muvuku_webapp_url": "/medic-reporter/_design/medic-reporter/_rewrite/?_embed_mode=2&_locale=en#/generic-anc.json",
  "date_format": "ddd, MMM Do, YYYY",
  "reported_date_format": "ddd, MMM Do, YYYY [at] h:mm A",
  "forms_only_mode": false,
  "default_responses": {
    "start_date": "1970-01-01"
  },
  "district_admins_access_unallocated_messages": true,
  "public_access": false,
  "default_country_code": "263",
  "gateway_number": "+263782492877",
  "kujua-reporting": [
    {
      "code": "",
      "reporting_freq": "weekly"
    }
  ],
  "anc_forms": {},
  "schedule_morning_hours": 6,
  "schedule_morning_minutes": 0,
  "schedule_evening_hours": 20,
  "schedule_evening_minutes": 0,
  "synthetic_date": "",
  "contact_display_short": "clinic.name",
  "permissions": {
    "can_export_messages": [
      "national_admin",
      "district_admin",
      "analytics"
    ],
    "can_export_forms": [
      "national_admin",
      "district_admin",
      "analytics"
    ],
    "can_export_contacts": [
      "national_admin",
      "district_admin"
    ],
    "can_export_audit": [
      "national_admin"
    ],
    "can_export_feedback": [
      "national_admin"
    ],
    "can_export_server_logs": [
      "national_admin"
    ],
    "can_access_directly": [
      "national_admin"
    ],
    "can_view_analytics": [
      "national_admin",
      "district_admin",
      "analytics"
    ],
    "can_view_data_records": [
      "national_admin",
      "district_admin",
      "analytics",
      "gateway"
    ],
    "can_view_unallocated_data_records": [
      "national_admin",
      "district_admin",
      "gateway"
    ],
    "can_view_users": [
      "national_admin"
    ],
    "can_edit": [
      "national_admin",
      "district_admin",
      "gateway"
    ],
    "can_update_messages": [
      "national_admin",
      "district_admin",
      "gateway"
    ],
    "can_update_users": [
      "national_admin"
    ],
    "can_update_people": [
      "national_admin",
      "district_admin"
    ],
    "can_update_places": [
      "national_admin"
    ],
    "can_create_records": [
      "national_admin",
      "district_admin",
      "data_entry",
      "gateway"
    ],
    "can_access_gateway_api": [
      "gateway"
    ],
    "can_create_users": [
      "national_admin"
    ],
    "can_create_people": [
      "national_admin",
      "district_admin"
    ],
    "can_create_places": [
      "national_admin"
    ],
    "can_view_tasks": [
      "national_admin",
      "district_admin"
    ],
    "can_view_tasks_tab": [
      "national_admin",
      "district_admin"
    ],
    "can_configure": [
      "national_admin"
    ],
    "can_view_messages": [
      "national_admin",
      "district_admin"
    ],
    "can_view_messages_tab": [
      "national_admin",
      "district_admin"
    ],
    "can_view_reports": [
      "national_admin",
      "district_admin"
    ],
    "can_view_reports_tab": [
      "national_admin",
      "district_admin"
    ],
    "can_view_analytics_tab": [
      "national_admin",
      "district_admin"
    ],
    "can_view_contacts": [
      "national_admin",
      "district_admin"
    ],
    "can_view_contacts_tab": [
      "national_admin",
      "district_admin"
    ],
    "can_edit_profile": [
      "national_admin",
      "district_admin"
    ],
    "can_delete_reports": [
      "national_admin",
      "district_admin"
    ],
    "can_bulk_delete_reports": [
      "national_admin",
      "district_admin"
    ],
    "can_delete_contacts": [
      "national_admin",
      "district_admin"
    ],
    "can_delete_messages": [
      "national_admin",
      "district_admin"
    ],
    "can_delete_users": [
      "national_admin"
    ],
    "can_view_message_action": [
      "national_admin",
      "district_admin"
    ],
    "can_view_call_action": [
      "national_admin",
      "district_admin"
    ],
    "can_log_out_on_android": []
  },
  "roles": {
    "data_entry": {
      "name": "usertype.data-entry"
    },
    "analytics": {
      "name": "usertype.analytics"
    },
    "gateway": {
      "name": "usertype.gateway"
    },
    "national_admin": {
      "name": "usertype.national-manager"
    },
    "district_admin": {
      "name": "usertype.district-manager",
      "offline": true
    }
  },
  "setup_complete": true,
  "care_coordinator": "chw",
  "anc_registration_lmp": true,
  "statistics_submission": "none",
  "outgoing_phone_replace": {
    "match": "",
    "replace": ""
  },
  "outgoing_phone_filters": [
    {
      "match": "",
      "replace": ""
    }
  ],
  "id_format": "1111",
  "statistics_submission_number": "",
  "replication_depth": [
    {
      "role": "",
      "depth": 2
    }
  ],
  "alerts": [
    {
      "form": "",
      "condition": "",
      "message": "",
      "recipient": ""
    }
  ],
  "reminders": [
    {
      "form": "",
      "text_expression": "",
      "cron": "",
      "mute_after_form_for": "",
      "message": ""
    }
  ],
  "registrations": [
    {
      "form": "scheduled_msgs",
      "events": [
        {
          "name": "on_create",
          "trigger": "add_patient",
          "params": "{\"patient_name_field\": \"patient_name\"}",
          "bool_expr": ""
        },
        {
          "name": "on_create",
          "trigger": "assign_schedule",
          "params": "Enrolled Clients Reminders English",
          "bool_expr": "doc.fields.patient.language_preference == 'english'"
        },
        {
          "name": "on_create",
          "trigger": "assign_schedule",
          "params": "Day 7 No Response Reminder English",
          "bool_expr": "doc.fields.patient.language_preference == 'english'"
        },
        {
          "name": "on_create",
          "trigger": "assign_schedule",
          "params": "Enrolled Clients Reminders Shona",
          "bool_expr": "doc.fields.patient.language_preference == 'shona'"
        },
        {
          "name": "on_create",
          "trigger": "assign_schedule",
          "params": "Day 7 No Response Reminder Shona",
          "bool_expr": "doc.fields.patient.language_preference == 'shona'"
        }
      ],
      "validations": {
        "join_responses": false,
        "list": []
      },
      "messages": [
        {
          "message": [
            {
              "content": "Thank you for participating in this study to improve male circumcision services. Tinokutendai nekupinda mutsvakiridzo ichabatsira kuvandudza chirongwa chekuchecheudzwa.",
              "locale": "en"
            }
          ],
          "recipient": "phone"
        }
      ]
    },
    {
      "form": "0",
      "fields": [],
      "events": [
        {
          "name": "on_create",
          "trigger": "clear_schedule",
          "params": "Day 7 No Response Reminder English",
          "bool_expr": ""
        },
        {
          "name": "on_create",
          "trigger": "clear_schedule",
          "params": "Day 7 No Response Reminder Shona",
          "bool_expr": ""
        }
      ],
      "validations": {},
      "messages": []
    },
    {
      "form": "1",
      "fields": [],
      "events": [
        {
          "name": "on_create",
          "trigger": "clear_schedule",
          "params": "Day 7 No Response Reminder English",
          "bool_expr": ""
        },
        {
          "name": "on_create",
          "trigger": "clear_schedule",
          "params": "Day 7 No Response Reminder Shona",
          "bool_expr": ""
        }
      ],
      "validations": {},
      "messages": [
        {
          "message": [
            {
              "content": "What among the following are you experiencing? Bleeding,\nSwelling,\nPus, \nRedness or \nPain. Type the response and send.",
              "locale": "en"
            }
          ],
          "recipient": "phone"
        }
      ]
    },
    {
      "form": "4",
      "fields": [],
      "events": [],
      "validations": {},
      "messages": []
    },
    {
      "form": "9",
      "fields": [],
      "events": [],
      "validations": {},
      "messages": []
    },
    {
      "form": "Y",
      "fields": [],
      "events": [],
      "validations": {},
      "messages": []
    },
    {
      "form": "N",
      "fields": [],
      "events": [],
      "validations": {},
      "messages": []
    }
  ],
  "patient_reports": [
    {
      "form": "followup",
      "validations": {},
      "messages": []
    },
    {
      "form": "day14review",
      "validations": {},
      "messages": []
    }
  ],
  "schedules": [
    {
      "name": "Enrolled Clients Reminders English",
      "summary": "",
      "description": "",
      "start_from": "reported_date",
      "messages": [
        {
          "message": [
            {
              "content": "Hi {{patient_name}}, Are you experiencing any bleeding, swelling, pus, pain, redness or wound opening? Enter 1=Yes 0=No and press send.",
              "locale": "en"
            }
          ],
          "group": 1,
          "offset": "1 days",
          "send_time": "05:00",
          "recipient": "phone"
        },
        {
          "message": [
            {
              "content": "Hi {{patient_name}}, Are you experiencing any bleeding, swelling, pus, pain, redness or wound opening? Enter 1=Yes 0=No and press send.",
              "locale": "en"
            }
          ],
          "group": 2,
          "offset": "2 days",
          "send_time": "05:00",
          "recipient": "phone"
        },
        {
          "message": [
            {
              "content": "Hi {{patient_name}}, Are you experiencing any bleeding, swelling, pus, pain, redness or wound opening? Enter 1=Yes 0=No and press send.",
              "locale": "en"
            }
          ],
          "group": 3,
          "offset": "3 days",
          "send_time": "05:00",
          "recipient": "phone"
        },
        {
          "message": [
            {
              "content": "Hi {{patient_name}}, Are you experiencing any bleeding, swelling, pus, pain, redness or wound opening? Enter 1=Yes 0=No and press send.",
              "locale": "en"
            }
          ],
          "group": 4,
          "offset": "4 days",
          "send_time": "05:00",
          "recipient": "phone"
        },
        {
          "message": [
            {
              "content": "Hi {{patient_name}}, Are you experiencing any bleeding, swelling, pus, pain, redness or wound opening? Enter 1=Yes 0=No and press send.",
              "locale": "en"
            }
          ],
          "group": 5,
          "offset": "5 days",
          "send_time": "05:00",
          "recipient": "phone"
        },
        {
          "message": [
            {
              "content": "Hi {{patient_name}}, Are you experiencing any bleeding, swelling, pus, pain, redness or wound opening? Enter 1=Yes 0=No and press send.",
              "locale": "en"
            }
          ],
          "group": 6,
          "offset": "6 days",
          "send_time": "05:00",
          "recipient": "phone"
        },
        {
          "message": [
            {
              "content": "Hi {{patient_name}}, Are you experiencing any bleeding, swelling, pus, pain, redness or wound opening? Enter 1=Yes 0=No and press send.",
              "locale": "en"
            }
          ],
          "group": 7,
          "offset": "7 days",
          "send_time": "05:00",
          "recipient": "phone"
        },
        {
          "message": [
            {
              "content": "Hi {{patient_name}}, Are you experiencing any bleeding, swelling, pus, pain, redness or wound opening? Enter 1=Yes 0=No and press send.",
              "locale": "en"
            }
          ],
          "group": 8,
          "offset": "8 days",
          "send_time": "05:00",
          "recipient": "phone"
        },
        {
          "message": [
            {
              "content": "Hi {{patient_name}}, Are you experiencing any bleeding, swelling, pus, pain, redness or wound opening? Enter 1=Yes 0=No and press send.",
              "locale": "en"
            }
          ],
          "group": 9,
          "offset": "9 days",
          "send_time": "05:00",
          "recipient": "phone"
        },
        {
          "message": [
            {
              "content": "Hi {{patient_name}}, Are you experiencing any bleeding, swelling, pus, pain, redness or wound opening? Enter 1=Yes 0=No and press send.",
              "locale": "en"
            }
          ],
          "group": 10,
          "offset": "10 days",
          "send_time": "05:00",
          "recipient": "phone"
        },
        {
          "message": [
            {
              "content": "Hi {{patient_name}}, Are you experiencing any bleeding, swelling, pus, pain, redness or wound opening? Enter 1=Yes 0=No and press send.",
              "locale": "en"
            }
          ],
          "group": 11,
          "offset": "11 days",
          "send_time": "05:00",
          "recipient": "phone"
        },
        {
          "message": [
            {
              "content": "Hi {{patient_name}}, Are you experiencing any bleeding, swelling, pus, pain, redness or wound opening? Enter 1=Yes 0=No and press send.",
              "locale": "en"
            }
          ],
          "group": 12,
          "offset": "12 days",
          "send_time": "05:00",
          "recipient": "phone"
        },
        {
          "message": [
            {
              "content": "Hi {{patient_name}}, Are you experiencing any bleeding, swelling, pus, pain, redness or wound opening? Enter 1=Yes 0=No and press send.",
              "locale": "en"
            }
          ],
          "group": 13,
          "offset": "13 days",
          "send_time": "05:00",
          "recipient": "phone"
        },
        {
          "message": [
            {
              "content": "Hi {{patient_name}}, continue to monitor you healing and abstain from sex until Day 42.",
              "locale": "en"
            }
          ],
          "group": 14,
          "offset": "14 days",
          "send_time": "05:00",
          "recipient": "phone"
        }
      ]
    },
    {
      "name": "Enrolled Clients Reminders Shona",
      "summary": "",
      "description": "",
      "start_from": "reported_date",
      "messages": [
        {
          "message": [
            {
              "content": "Mhoro {{patient_name}}, Paronda renyu parikubuda ropa, kuzvimba, hurwa, kurwadziwa, kutsvuka, kana kuvhurika here? Bayai 1= Hongu 0=Kwete, motumira",
              "locale": "en"
            }
          ],
          "group": 1,
          "offset": "1 days",
          "send_time": "05:00",
          "recipient": "phone"
        },
        {
          "message": [
            {
              "content": "Mhoro {{patient_name}}, Paronda renyu parikubuda ropa, kuzvimba, hurwa, kurwadziwa, kutsvuka, kana kuvhurika here? Bayai 1= Hongu 0=Kwete, motumira",
              "locale": "en"
            }
          ],
          "group": 2,
          "offset": "2 days",
          "send_time": "05:00",
          "recipient": "phone"
        },
        {
          "message": [
            {
              "content": "Mhoro {{patient_name}}, Paronda renyu parikubuda ropa, kuzvimba, hurwa, kurwadziwa, kutsvuka, kana kuvhurika here? Bayai 1= Hongu 0=Kwete, motumira",
              "locale": "en"
            }
          ],
          "group": 3,
          "offset": "3 days",
          "send_time": "05:00",
          "recipient": "phone"
        },
        {
          "message": [
            {
              "content": "Mhoro {{patient_name}}, Paronda renyu parikubuda ropa, kuzvimba, hurwa, kurwadziwa, kutsvuka, kana kuvhurika here? Bayai 1= Hongu 0=Kwete, motumira",
              "locale": "en"
            }
          ],
          "group": 4,
          "offset": "4 days",
          "send_time": "05:00",
          "recipient": "phone"
        },
        {
          "message": [
            {
              "content": "Mhoro {{patient_name}}, Paronda renyu parikubuda ropa, kuzvimba, hurwa, kurwadziwa, kutsvuka, kana kuvhurika here? Bayai 1= Hongu 0=Kwete, motumira",
              "locale": "en"
            }
          ],
          "group": 5,
          "offset": "5 days",
          "send_time": "05:00",
          "recipient": "phone"
        },
        {
          "message": [
            {
              "content": "Mhoro {{patient_name}}, Paronda renyu parikubuda ropa, kuzvimba, hurwa, kurwadziwa, kutsvuka, kana kuvhurika here? Bayai 1= Hongu 0=Kwete, motumira",
              "locale": "en"
            }
          ],
          "group": 6,
          "offset": "6 days",
          "send_time": "05:00",
          "recipient": "phone"
        },
        {
          "message": [
            {
              "content": "Mhoro {{patient_name}}, Paronda renyu parikubuda ropa, kuzvimba, hurwa, kurwadziwa, kutsvuka, kana kuvhurika here? Bayai 1= Hongu 0=Kwete, motumira",
              "locale": "en"
            }
          ],
          "group": 7,
          "offset": "7 days",
          "send_time": "05:00",
          "recipient": "phone"
        },
        {
          "message": [
            {
              "content": "Mhoro {{patient_name}}, Paronda renyu parikubuda ropa, kuzvimba, hurwa, kurwadziwa, kutsvuka, kana kuvhurika here? Bayai 1= Hongu 0=Kwete, motumira",
              "locale": "en"
            }
          ],
          "group": 8,
          "offset": "8 days",
          "send_time": "05:00",
          "recipient": "phone"
        },
        {
          "message": [
            {
              "content": "Mhoro {{patient_name}}, Paronda renyu parikubuda ropa, kuzvimba, hurwa, kurwadziwa, kutsvuka, kana kuvhurika here? Bayai 1= Hongu 0=Kwete, motumira",
              "locale": "en"
            }
          ],
          "group": 9,
          "offset": "9 days",
          "send_time": "05:00",
          "recipient": "phone"
        },
        {
          "message": [
            {
              "content": "Mhoro {{patient_name}}, Paronda renyu parikubuda ropa, kuzvimba, hurwa, kurwadziwa, kutsvuka, kana kuvhurika here? Bayai 1= Hongu 0=Kwete, motumira",
              "locale": "en"
            }
          ],
          "group": 10,
          "offset": "10 days",
          "send_time": "05:00",
          "recipient": "phone"
        },
        {
          "message": [
            {
              "content": "Mhoro {{patient_name}}, Paronda renyu parikubuda ropa, kuzvimba, hurwa, kurwadziwa, kutsvuka, kana kuvhurika here? Bayai 1= Hongu 0=Kwete, motumira",
              "locale": "en"
            }
          ],
          "group": 11,
          "offset": "11 days",
          "send_time": "05:00",
          "recipient": "phone"
        },
        {
          "message": [
            {
              "content": "Mhoro {{patient_name}}, Paronda renyu parikubuda ropa, kuzvimba, hurwa, kurwadziwa, kutsvuka, kana kuvhurika here? Bayai 1= Hongu 0=Kwete, motumira",
              "locale": "en"
            }
          ],
          "group": 12,
          "offset": "12 days",
          "send_time": "05:00",
          "recipient": "phone"
        },
        {
          "message": [
            {
              "content": "Mhoro {{patient_name}}, Paronda renyu parikubuda ropa, kuzvimba, hurwa, kurwadziwa, kutsvuka, kana kuvhurika here? Bayai 1= Hongu 0=Kwete, motumira",
              "locale": "en"
            }
          ],
          "group": 13,
          "offset": "13 days",
          "send_time": "05:00",
          "recipient": "phone"
        },
        {
          "message": [
            {
              "content": "Hi {{patient_name}}, continue to monitor you healing and abstain from sex until Day 42.",
              "locale": "en"
            }
          ],
          "group": 14,
          "offset": "14 days",
          "send_time": "05:00",
          "recipient": "phone"
        }
      ]
    },
    {
      "name": "Day 7 No Response Reminder English",
      "summary": "",
      "description": "",
      "start_from": "reported_date",
      "messages": [
        {
          "message": [
            {
              "content": "Hi {{patient_name}}, How are you? We have not heard from you this week. Have you encountered any bleeding, swelling, pus, pain, redness or wound opening? If Yes send 1, If No send 0 (zero).",
              "locale": "en"
            }
          ],
          "group": 1,
          "offset": "7 days",
          "send_time": "09:00",
          "recipient": "phone"
        }
      ]
    },
    {
      "name": "Day 7 No Response Reminder Shona",
      "summary": "",
      "description": "",
      "start_from": "reported_date",
      "messages": [
        {
          "message": [
            {
              "content": "Hi {{patient_name}}, How are you? We have not heard from you this week. Have you encountered any bleeding, swelling, pus, pain, redness or wound opening? If Yes send 1, If No send 0 (zero).",
              "locale": "en"
            }
          ],
          "group": 1,
          "offset": "7 days",
          "send_time": "09:00",
          "recipient": "phone"
        }
      ]
    }
  ],
  "notifications": {
    "off_form": "OFF",
    "on_form": "ON",
    "confirm_deactivation": false,
    "validations": {
      "join_responses": false,
      "list": [
        {
          "property": "patient_id",
          "rule": "regex('^[0-9]{5}$')",
          "message": [
            {
              "content": "{{#patient_id}}The ID number submitted is incorrect, it should be 5 numbers, please submit a valid ID.{{/patient_id}}{{^patient_id}}The message format is incorrect. Please ensure the message begins with ON or OFF followed by space then the woman's ID.{{/patient_id}}",
              "locale": "en"
            },
            {
              "content": "{{#patient_id}}Nambari ya ID iliyowasilishwa si sahihi, yapaswa kuwa nambari 5, tafadhali wasilisha ID halali.{{/patient_id}}{{^patient_id}}Muundo wa ujumbe si sahihi. Tafadhali hakikisha umeanza na ON/OFF ikifuatiwa na nafasi kisha ID ya mwanamke.{{/patient_id}}",
              "locale": "sw"
            },
            {
              "content": "{{#patient_id}}Le numéro d'identification doit être 5 chiffres. SVP réessayez avec un code d'identification valide.{{/patient_id}}{{^patient_id}}Le message manque le numéro d'identification. SVP réessayez avec le mot ON ou OFF suivi d'un espace ensuite le code d'identification du patient.{{/patient_id}}",
              "locale": "fr"
            },
            {
              "content": "{{#patient_id}} यह पहचान नंबर गलत है , 5 अंकों का एक मान्य पहचान नंबर कृपया भेजें | {{/patient_id}}{{^patient_id}} यह संदेश का नंबर गलत है | कृपया जांचें कि संदेश \"ON\" या \"OFF\" के साथ शुरू होता है और महिला की पहचान नंबर के साथ समाप्त होता है | {{/patient_id}}",
              "locale": "hi"
            },
            {
              "content": "{{#patient_id}} दर्ता नं मिलेन। कृपया ५ अंकको सहि दर्ता नं प्रयोग गरि पुन: फारम पठाउनुहोला। {{/patient_id}}{{^patient_id}} सन्देशको ढांचा मिलेन! सहि प्रतिवेदनको सुरुमा ON या OFF र अन्त्यमा ५ अंकको दर्ता नं हुनुपर्छ।{{/patient_id}}",
              "locale": "ne"
            },
            {
              "content": "{{#patient_id}}  El numero de la ID presentado es incorrecto Deberia ser de 5 numeros, por favor presenta una ID valida..{{/patient_id}}{{^patient_id}}El formato del mensaje es incorrecto. Por favor enviar un mensaje que empieze con ON o OFF seguido por un espacio y el ID de la mujer.{{/patient_id}}",
              "locale": "es"
            }
          ]
        }
      ]
    },
    "messages": [
      {
        "message": [
          {
            "content": "No further notifications regarding {{patient_name}} will be sent until you submit 'ON {{patient_id}}'.",
            "locale": "en"
          },
          {
            "content": "Asante {{contact.name}}, arifa zaidi kumhusu {{patient_name}} hazitatumwa hadi utakapowasilisha 'ON {{patient_id}}'.",
            "locale": "sw"
          },
          {
            "content": "Les messages pour {{patient_name}} ont été arrêtés. Pour réactiver envoyez 'ON {{patient_id}}'.",
            "locale": "fr"
          },
          {
            "content": "जब तक आप 'ON {{patient_id}}' नहीं भेजेंगे, {{patient_name}} से संबंधित कोई और सूचनाएं को नहीं भेजा जाएगा ।",
            "locale": "hi"
          },
          {
            "content": "{{patient_name}} ({{patient_id}}) का लागि सबै सुचना बन्द गरिएको छ। सुचारु गर्नका लागि 'ON {{patient_id}}' लेखि SMS पठाउनुहोला। धन्यवाद!",
            "locale": "ne"
          },
          {
            "content": "No mas notificaciones sobre {{patient_name}} seran enviadas a usted hasta que usted presenta 'ON {{patient_id}}'.",
            "locale": "es"
          }
        ],
        "event_type": "on_mute",
        "recipient": "reporting_unit"
      },
      {
        "message": [
          {
            "content": "Thank you {{contact.name}}, record for {{patient_name}} ({{patient_id}}) has been reactivated. Notifications regarding this patient will resume.",
            "locale": "en"
          },
          {
            "content": "Asante {{contact.name}}, rekodi ya {{patient_name}} ({{patient_id}}) imefunguliwa tena. Arifa za mhudumiwa huyu zimerejeshwa.",
            "locale": "sw"
          },
          {
            "content": "Merci {{contact.name}}, les messages pour {{patient_name}} ({{patient_id}}) ont été réactivés.",
            "locale": "fr"
          },
          {
            "content": "धन्यवाद {{contact.name}}, {{patient_name}} ({{patient_id}}) का रिकॉर्ड फिर से सक्रिय बना दिया गया है |  इस रोगी से संबंधित सूचनाएं फिर से शुरू हो जाएंगे |",
            "locale": "hi"
          },
          {
            "content": "धन्यवाद, {{contact.name}}! {{patient_name}} ({{patient_id}}) का लागि सुचना सुचारु गरिएको छ।",
            "locale": "ne"
          },
          {
            "content": "Gracias {{contact.name}}, el registro para {{patient_name}} ({{patient_id}}) ha sido reactivado. Notificaciones sobre este paciente reanudaran.",
            "locale": "es"
          }
        ],
        "event_type": "on_unmute",
        "recipient": "reporting_unit"
      },
      {
        "message": [
          {
            "content": "No patient with ID number '{{patient_id}}' found.",
            "locale": "en"
          },
          {
            "content": "Hakuna mhudumiwa mwenye nambari ya ID '{{patient_id}}'.",
            "locale": "sw"
          },
          {
            "content": "Aucun patient a été trouvé avec le numéro d'identification '{{patient_id}}'.",
            "locale": "fr"
          },
          {
            "content": "पहचान नंबर '{{patient_id}}' का कोई रोगी नहीं मिल पाया |",
            "locale": "hi"
          },
          {
            "content": " '{{patient_id}}' कुनै पनि महिलालाई दिईएको छैन।",
            "locale": "ne"
          },
          {
            "content": "No se encuentra ninguna paciente con el numero de ID '{{patient_id}}'.",
            "locale": "es"
          }
        ],
        "event_type": "patient_not_found",
        "recipient": "reporting_unit"
      }
    ]
  },
  "tasks": {
    "rules": "define Target { _id: null, contact: null, deleted: null, type: null, pass: null, date: null, groupBy: null }\ndefine Contact { contact: null, reports: null, tasks: null }\ndefine Task { _id: null, deleted: null, doc: null, contact: null, icon: null, date: null, readyStart: null, readyEnd: null, title: null, fields: null, resolved: null, priority: null, priorityLabel: null, reports: null, actions: null }\nrule GenerateEvents {\n  when { c: Contact } then { /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\n/*\nDeclarative tasks and targets (the elements exported by partner task.js and target.js files), are complex objects containing functions. \nDefinition-preparation.js binds a value for `this` in all the functions within a definition. \nThis fascilitates simple data sharing between functions, and allows function logic to reference the definition itself.\n*/\n\nfunction prepare(definition) {\n  var targetContext = {};\n  bindAllFunctionsToContext(definition, targetContext);\n  targetContext.definition = deepCopy(definition);\n}\n\nfunction bindAllFunctionsToContext(obj, context) {\n  var keys = Object.keys(obj);\n  for (var i in keys) {\n    var key = keys[i];\n    switch(typeof obj[key]) {\n      case 'object':\n        bindAllFunctionsToContext(obj[key], context);\n        break;\n      case 'function':\n        obj[key] = obj[key].bind(context);\n        break;\n    }\n  }\n}\n\nfunction deepCopy(obj) {\n  var copy = Object.assign({}, obj);\n  var keys = Object.keys(copy);\n  for (var i in keys) {\n    var key = keys[i];\n    if (Array.isArray(copy[key])) {\n      copy[key] = copy[key].slice(0);\n      for (var j = 0; j < copy[key].length; ++j) {\n        if (typeof copy[key][j] === 'object') {\n          copy[key][j] = deepCopy(copy[key][j]);\n        }\n      }\n    } else if (typeof copy[key] === 'object') {\n      copy[key] = deepCopy(copy[key]);\n    }\n  }\n  return copy;\n}\n\nmodule.exports = prepare;\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* global c, emit, Task, Target */\n\nvar tasks = __webpack_require__(2);\nvar targets = __webpack_require__(3);\n\nvar taskEmitter = __webpack_require__(4); \nvar targetEmitter = __webpack_require__(5);\n\ntargetEmitter(targets, c, Utils, Target, emit);\ntaskEmitter(tasks, c, Utils, Task, emit);\n\nemit('_complete', { _id: true });\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\nconst pilot_users = [\r\n    '58284f3c-9c2e-49f5-a039-8d90071c8022',\r\n    '303f9f4c-0c6f-405c-940a-b2f573a85a0c',\r\n    'fcac5344-c15d-4c04-b888-df0cf77fc275',\r\n    'f69d7760-fd9c-418a-a41d-a349cbe5cba2',\r\n    'f8af310b-ffb3-4ecf-b345-b46c196f6d5c',\r\n    '711fe306-e072-433b-9de7-1666d709e87b',\r\n    'd36fb82a-c150-4745-a991-4644f10e1883',\r\n    '3457a5f1-e806-438a-929b-a246ffdb98d4',\r\n    '749cc214-d05a-4f19-8ce0-61e233bac7b2',\r\n    '323d1b41-3427-4109-9336-32e5f37c03dd',\r\n    '4bccd638-6f69-4fbd-914a-c115eba1563b',\r\n    '72a86cdc-4d32-4cb0-85c2-7b5c63d0bb32',\r\n    '4b9ac080-a3ee-4959-94dd-c5b7ea29e7a1',\r\n    '112d37f9-25e2-49b7-b289-d4ead1ce248c',\r\n    '5fe44ccb-8cc2-4d26-9157-df01d4899d34',\r\n    'f4d7b1e7-ff89-40b3-9d70-9afa5685c6fa'\r\n];\r\n\r\nmodule.exports = [\r\n    {\r\n        name: 'scheduled-msgs',\r\n        icon: 'network',\r\n        title: 'task.scheduled-msgs.title',\r\n        appliesTo: 'contacts',\r\n        appliesToType: ['person'],\r\n        appliesIf: (contact) => {\r\n            return !pilot_users.includes(contact.contact._id) && !contact.contact.is_nurse;\r\n        },\r\n        resolvedIf: (contact, report, event, dueDate) => {\r\n            return Utils.isFormSubmittedInWindow(\r\n                contact.reports,\r\n                'scheduled_msgs',\r\n                Utils.addDate(dueDate, -event.start).getTime(),\r\n                Utils.addDate(dueDate, event.end + 1).getTime()\r\n            );\r\n        },\r\n        actions: [{\r\n            form: 'scheduled_msgs',\r\n            label: 'Send 14-day scheduled SMSs'\r\n        }],\r\n        events: [{\r\n            days: 0,\r\n            start: 1,\r\n            end: 365\r\n        }]\r\n    },\r\n\r\n    {\r\n        name: 'client-review-request',\r\n        icon: 'network',\r\n        title: 'task.client-review-request.title',\r\n        appliesTo: 'reports',\r\n        appliesToType: ['no_contact', 'referral_for_care'],\r\n        appliesIf: (contact, report) => {\r\n            return report.form === 'referral_for_care' ||\r\n                report.form === 'no_contact' && Utils.getField(report, 'n.client_ok') !== 'yes';\r\n        },\r\n        resolvedIf: (contact, report, event, dueDate) => {\r\n            return Utils.isFormSubmittedInWindow(\r\n                contact.reports,\r\n                'client_review',\r\n                Utils.addDate(dueDate, -event.start).getTime(),\r\n                Utils.addDate(dueDate, event.end + 1).getTime()\r\n            );\r\n        },\r\n        actions: [{\r\n            form: 'client_review',\r\n            label: 'Client review',\r\n            modifyContent: function (content, contact, report) {\r\n                if (report.form === 'no_contact') {\r\n                    content.is_no_contact_ctx = true;\r\n                }\r\n                else {\r\n                    content.is_referral_for_care_ctx = true;\r\n                }\r\n            }\r\n        }],\r\n        events: [{\r\n            days: 0,\r\n            start: 1,\r\n            end: 365\r\n        }]\r\n    }\r\n];\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nmodule.exports = [];\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar prepareDefinition = __webpack_require__(0);\n\nfunction taskEmitter(taskDefinitions, c, Utils, Task, emit) {\n  if (!taskDefinitions) return;\n\n  var taskDefinition, r;\n  for (var idx1 = 0; idx1 < taskDefinitions.length; ++idx1) {\n    taskDefinition = taskDefinitions[idx1];\n    prepareDefinition(taskDefinition);\n\n    switch (taskDefinition.appliesTo) {\n      case 'reports':\n      case 'scheduled_tasks':\n        for (var idx2=0; idx2<c.reports.length; ++idx2) {\n          r = c.reports[idx2];\n          emitTasks(taskDefinition, Utils, Task, emit, c, r);\n        }\n        break;\n      case 'contacts':\n        if (c.contact) {\n          emitTasks(taskDefinition, Utils, Task, emit, c);\n        }\n        break;\n      default:\n        throw new Error('Unrecognised task.appliesTo: ' + taskDefinition.appliesTo);\n    }\n  }\n}\n\nfunction emitTasks(taskDefinition, Utils, Task, emit, c, r) {\n  var i;\n\n  if (taskDefinition.appliesToType) {\n    var contactType = c.contact.type === 'contact' ? c.contact.contact_type : c.contact.type;\n    var shouldApply = taskDefinition.appliesTo === 'contacts' ?\n      taskDefinition.appliesToType.indexOf(contactType) !== -1 :\n      r && taskDefinition.appliesToType.indexOf(r.form) !== -1;\n\n    if (!shouldApply) {\n      return;\n    }\n  }\n\n  if (taskDefinition.appliesTo !== 'scheduled_tasks' && taskDefinition.appliesIf && !taskDefinition.appliesIf(c, r)) {\n    return;\n  }\n\n  if (taskDefinition.appliesTo === 'scheduled_tasks'){\n    if (r && taskDefinition.appliesIf) {\n      if (!r.scheduled_tasks) {\n        return;\n      }\n\n      for (i = 0; i < r.scheduled_tasks.length; i++) {\n        if (taskDefinition.appliesIf(c, r, i)) {\n          emitForEvents(i);\n        }\n      }\n    }\n  } else {\n    emitForEvents();\n  }\n\n  function obtainContactLabelFromSchedule(taskDefinition, c, r) {\n    var contactLabel;\n    if (typeof taskDefinition.contactLabel === 'function') {\n      contactLabel = taskDefinition.contactLabel(c, r);\n    } else {\n      contactLabel = taskDefinition.contactLabel;\n    }\n  \n    return contactLabel ? { name: contactLabel } : c.contact;\n  }  \n\n  function emitForEvents(scheduledTaskIdx) {\n    var i, dueDate = null, event, priority, task;\n    for (i = 0; i < taskDefinition.events.length; i++) {\n      event = taskDefinition.events[i];\n\n      if (event.dueDate) {\n        dueDate = event.dueDate(event, c, r, scheduledTaskIdx);\n      } else if (r) {\n        if (scheduledTaskIdx !== undefined) {\n          dueDate = new Date(Utils.addDate(new Date(r.scheduled_tasks[scheduledTaskIdx].due), event.days));\n        } else {\n          dueDate = new Date(Utils.addDate(new Date(r.reported_date), event.days));\n        }\n      } else {\n        if (event.dueDate) {\n          dueDate = event.dueDate(event, c);\n        } else {\n          var defaultDueDate = c.contact && c.contact.reported_date ? new Date(c.contact.reported_date) : new Date();\n          dueDate = new Date(Utils.addDate(defaultDueDate, event.days));\n        }\n      }\n\n      if (!Utils.isTimely(dueDate, event)) {\n        continue;\n      }\n\n      task = {\n        // One task instance for each event per form that triggers a task, not per contact\n        // Otherwise they collide when contact has multiple reports of the same form\n        _id: (r ? r._id : c.contact && c.contact._id) + '~' + (event.id || i) + '~' + taskDefinition.name,\n        deleted: !!((c.contact && c.contact.deleted) || r ? r.deleted : false),\n        doc: c,\n        contact: obtainContactLabelFromSchedule(taskDefinition, c, r),\n        icon: taskDefinition.icon,\n        date: dueDate,\n        readyStart: event.start || 0,\n        readyEnd: event.end || 0,\n        title: taskDefinition.title,\n        resolved: taskDefinition.resolvedIf(c, r, event, dueDate, scheduledTaskIdx),\n        actions: taskDefinition.actions.map(initActions),\n      };\n\n      if (scheduledTaskIdx !== undefined) {\n        task._id += '-' + scheduledTaskIdx;\n      }\n\n      priority = taskDefinition.priority;\n      if (typeof priority === 'function') {\n        priority = priority(c, r);\n      }\n\n      if (priority) {\n        task.priority = priority.level;\n        task.priorityLabel = priority.label;\n      }\n\n      emit('task', new Task(task));\n    }\n  }\n\n  function initActions(def) {\n    var appliesToReport = !!r;\n    var content = {\n      source: 'task',\n      source_id: appliesToReport ? r._id : c.contact && c.contact._id,\n      contact: c.contact,\n    };\n\n    if (def.modifyContent) {\n      def.modifyContent(content, c, r);\n    }\n\n    return {\n      type: 'report',\n      form: def.form,\n      label: def.label || 'Follow up',\n      content: content,\n    };\n  }\n}\n\nmodule.exports = taskEmitter;\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar prepareDefinition = __webpack_require__(0);\n\nfunction targetEmitter(targets, c, Utils, Target, emit) {\n  for (var idx1 = 0; idx1 < targets.length; ++idx1) {\n    var target = targets[idx1];\n    prepareDefinition(target);\n\n    switch (target.appliesTo) {\n      case 'contacts':\n        emitTargetFor(target, Target, Utils, emit, c);\n        break;\n      case 'reports':\n        for (var idx2 = 0; idx2 < c.reports.length; ++idx2) {\n          var r = c.reports[idx2];\n          emitTargetFor(target, Target, Utils, emit, c, r);\n        }\n        break;\n      default:\n        throw new Error('Unrecognised target.appliesTo: ' + target.appliesTo);\n    }\n  }\n}\n\nfunction determineDate(targetConfig, Utils, c, r) {\n  if (typeof targetConfig.date === 'function') {\n    return targetConfig.date(c, r);\n  }\n  \n  if (targetConfig.date === undefined || targetConfig.date === 'now') {\n    return Utils.now().getTime();\n  }\n\n  if (targetConfig.date === 'reported') {\n    return r ? r.reported_date : c.contact.reported_date;\n  }\n  \n  throw new Error('Unrecognised value for target.date: ' + targetConfig.date);\n}\n\nfunction determineInstanceIds(targetConfig, c, r) {\n  var instanceIds;\n  if (typeof targetConfig.idType === 'function') {\n    instanceIds = targetConfig.idType(c, r);\n  } else if (targetConfig.idType === 'report') {\n    instanceIds = r && r._id;\n  } else {\n    instanceIds = c.contact && c.contact._id;\n  }\n\n  if (!Array.isArray(instanceIds)) {\n    instanceIds = [instanceIds];\n  }\n\n  return instanceIds;\n}\n\nfunction emitTargetFor(targetConfig, Target, Utils, emit, c, r) {\n  var isEmittingForReport = !!r;\n  if (!c.contact) return;\n  var contactType = c.contact.contact_type || c.contact.type;\n  var appliesToKey = isEmittingForReport ? r.form : contactType;\n  if (targetConfig.appliesToType && targetConfig.appliesToType.indexOf(appliesToKey) < 0) return;\n  if (targetConfig.appliesIf && !targetConfig.appliesIf (c, r)) return;\n\n  var instanceDoc = isEmittingForReport ? r : c.contact;\n  var instanceIds = determineInstanceIds(targetConfig, c, r);\n  var pass = !targetConfig.passesIf || !!targetConfig.passesIf(c, r);\n  var date = determineDate(targetConfig, Utils, c, r);\n  var groupBy = targetConfig.groupBy && targetConfig.groupBy(c, r);\n\n  function emitTargetInstance(i) {\n    emit('target', i);\n  }\n\n  for (var i = 0; i < instanceIds.length; ++i) {\n    var instance = new Target({\n      _id: instanceIds[i] + '~' + targetConfig.id,\n      contact: c.contact,\n      deleted: !!instanceDoc.deleted,\n      type: targetConfig.id,\n      pass: pass,\n      groupBy: groupBy,\n      date: date,\n    });\n\n    if (targetConfig.emitCustom) {\n      targetConfig.emitCustom(emitTargetInstance, instance, c, r);\n    } else {\n      emitTargetInstance(instance);\n    }\n  }\n}\n\nmodule.exports = targetEmitter;\n\n\n/***/ })\n/******/ ]); }\n}",
    "targets": {
      "enabled": true,
      "items": []
    }
  },
  "forms": {
    "0": {
      "meta": {
        "label": {
          "en": "No AE Experienced"
        },
        "code": "0"
      },
      "fields": {},
      "facility_reference": "rc_code",
      "use_sentinel": true
    },
    "1": {
      "meta": {
        "label": {
          "en": "Suspected AE Reported"
        },
        "code": "1",
        "icon": "risk"
      },
      "fields": {},
      "facility_reference": "rc_code",
      "use_sentinel": true
    },
    "4": {
      "meta": {
        "label": {
          "en": "Satisfied with MC"
        },
        "code": "4"
      },
      "fields": {},
      "facility_reference": "rc_code",
      "use_sentinel": true
    },
    "9": {
      "meta": {
        "label": {
          "en": "Dissatisfied with MC"
        },
        "code": "9"
      },
      "fields": {},
      "facility_reference": "rc_code",
      "use_sentinel": true
    },
    "enroll": {
      "meta": {
        "label": {
          "en": "Client Enrollment"
        },
        "code": "enroll"
      },
      "fields": {
        "patient_id": {
          "position": 1,
          "type": "string",
          "labels": {
            "tiny": {
              "en": "patient_id"
            },
            "short": {
              "en": "Signal ID"
            },
            "description": {
              "en": "Signal ID"
            }
          },
          "list": []
        }
      },
      "facility_reference": "rc_code",
      "use_sentinel": false
    },
    "N": {
      "meta": {
        "label": {
          "en": "Does NOT recommend MC"
        },
        "code": "N"
      },
      "fields": {},
      "facility_reference": "rc_code",
      "use_sentinel": true
    },
    "Y": {
      "meta": {
        "label": {
          "en": "Recommends MC"
        },
        "code": "Y"
      },
      "fields": {},
      "facility_reference": "rc_code",
      "use_sentinel": true
    }
  },
  "transitions": {
    "default_responses": false,
    "update_clinics": true,
    "accept_patient_reports": true,
    "conditional_alerts": false,
    "update_sent_by": false,
    "registration": true,
    "update_notifications": true,
    "update_scheduled_reports": false,
    "multi_report_alerts": false,
    "update_sent_forms": false,
    "generate_patient_id_on_people": true
  },
  "_version": "2.13.5",
  "contact_summary": "var ContactSummary = {}; (function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(ContactSummary, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar contactSummary = __webpack_require__(1);\nvar contactSummaryEmitter = __webpack_require__(2);\n\nmodule.exports = contactSummaryEmitter(contactSummary, contact, reports);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\nconst thisContact = contact;\r\nconst thisLineage = lineage;\r\n\r\nconst isNurse = () => { return !!contact.is_nurse; };\r\nconst isNotNurse = () => { return !isNurse(); };\r\nlet daysSinceEnrollment;\r\nif (contact.type === 'person' && !isNurse()) {\r\n    const diff = new Date().getTime() - new Date(contact.reported_date).getTime();\r\n    daysSinceEnrollment = Math.floor(Math.abs(Math.round(diff / (1000 * 60 * 60 * 24))));\r\n}\r\n\r\nconst fields = [\r\n    { appliesToType: 'person', appliesIf: isNurse, label: 'contact.profile.nurse', value: '', width: 12 },\r\n    { appliesToType: 'person', appliesIf: isNotNurse, label: 'person.field.phone', value: thisContact.phone, width: 4, filter: 'phone' },\r\n    { appliesToType: 'person', appliesIf: isNotNurse, label: 'person.field.alternate_phone', value: thisContact.alternate_phone, width: 4, filter: 'phone' },\r\n    { appliesToType: 'person', appliesIf: isNotNurse, label: 'contact.age', value: thisContact.date_of_birth, width: 4, filter: 'age' },\r\n    { appliesToType: 'person', appliesIf: isNotNurse, label: 'contact.days_since_enrollment', value: daysSinceEnrollment, width: 6 },\r\n    { appliesToType: 'person', appliesIf: isNotNurse, label: 'contact.enrollment_date', value: contact.reported_date, width: 6, filter: 'date' },\r\n    { appliesToType: 'person', label: 'contact.parent', value: thisLineage, filter: 'lineage' },\r\n    { appliesToType: '!person', label: 'Contact', value: thisContact.contact && thisContact.contact.name, width: 4 },\r\n    { appliesToType: '!person', label: 'contact.phone_number', value: thisContact.contact && thisContact.contact.phone, width: 4 },\r\n    { appliesToType: '!person', label: 'External ID', value: thisContact.external_id, width: 4 },\r\n    { appliesToType: '!person', appliesIf: function () { return thisContact.parent && thisLineage[0]; }, label: 'contact.parent', value: thisLineage, filter: 'lineage' }\r\n];\r\n\r\nmodule.exports = {\r\n    fields: fields\r\n};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\nfunction emitter(contactSummary, contact, reports) {\n  var fields = contactSummary.fields || [];\n  var context = contactSummary.context || {};\n  var cards = contactSummary.cards || [];\n\n  var contactType = contact && (contact.contact_type || contact.type);\n\n  var result = {\n    cards: [],\n    fields: fields.filter(function(f) {\n      var appliesToType = convertToArray(f.appliesToType);\n      var appliesToNotType = appliesToType.filter(function(type) {\n        return type && type.charAt(0) === '!';\n      });\n      if (appliesToType.includes(contactType) ||\n          (appliesToNotType.length > 0 && !appliesToNotType.includes('!' + contactType))) {\n        if (!f.appliesIf || f.appliesIf()) {\n          delete f.appliesToType;\n          delete f.appliesIf;\n          return true;\n        }\n      }\n    }),\n  };\n\n  cards.forEach(function(card) {\n    var idx1, r, added;\n\n    var appliesToType = convertToArray(card.appliesToType);\n\n    if (appliesToType.includes('report') && appliesToType.length > 1) {\n      throw new Error(\"You cannot set appliesToType to an array which includes the type 'report' and another type.\");\n    }\n    \n    if (appliesToType.includes('report')) {\n      for (idx1=0; idx1<reports.length; ++idx1) {\n        r = reports[idx1];\n        if (!isReportValid(r)) {\n          continue;\n        }\n\n        added = addCard(card, context, r);\n        if (added) {\n          result.cards.push(added);\n        }\n      }\n    } else {\n      if (!appliesToType.includes(contactType)) {\n        return;\n      }\n\n      added = addCard(card, context);\n      if (added) {\n        result.cards.push(added);\n      }\n    }\n  });\n\n  result.context = context;\n\n  // return the result for 2.13+ as per #2635\n  return result;\n}\n\nfunction convertToArray(appliesToType) {\n  return Array.isArray(appliesToType) ? appliesToType : [appliesToType];  \n}\n\nfunction isReportValid(report) {\n  // valid XForms won't have .errors field\n  // valid JSON forms will have empty array errors:[]\n  return report && !(report.errors && report.errors.length);\n}\n\nfunction addCard(card, context, r) {\n  if (!card.appliesIf(r)) return;\n\n  function addValue(src, dst, prop) {\n    switch(typeof src[prop]) {\n      case 'undefined': return;\n      case 'function': dst[prop] = src[prop](r); break;\n      default: dst[prop] = src[prop];\n    }\n  }\n\n  var fields = typeof card.fields === 'function' ?\n      card.fields(r) :\n      card.fields\n        .filter(function(f) {\n          switch(typeof f.appliesIf) {\n            case 'undefined': return true;\n            case 'function':  return f.appliesIf(r);\n            default:          return f.appliesIf;\n          }\n        })\n        .map(function(f) {\n          var ret = {};\n          addValue(f, ret, 'label');\n          addValue(f, ret, 'value');\n          addValue(f, ret, 'translate');\n          addValue(f, ret, 'filter');\n          addValue(f, ret, 'width');\n          addValue(f, ret, 'icon');\n          if (f.context) {\n            ret.context = {};\n            addValue(f.context, ret.context, 'count');\n            addValue(f.context, ret.context, 'total');\n          }\n          return ret;\n        });\n\n  if (card.modifyContext) {\n    card.modifyContext(context, r);\n  }\n\n  return {\n    label: card.label,\n    fields: fields,\n  };\n}\n\nmodule.exports = emitter;\n\n\n/***/ })\n/******/ ]);\n}); return ContactSummary;",
  "place_hierarchy_types": [
    "district_hospital",
    "health_center"
  ],
  "changes_controller": {
    "reiterate_changes": true,
    "changes_limit": 100,
    "debounce_interval": 200
  },
  "sms": {
    "outgoing_service": "medic-gateway"
  },
  "contact_types": [
    {
      "id": "district_hospital",
      "name_key": "contact.type.district_hospital",
      "group_key": "contact.type.district_hospital.plural",
      "create_key": "contact.type.district_hospital.new",
      "edit_key": "contact.type.place.edit",
      "icon": "medic-district-hospital",
      "create_form": "form:contact:district_hospital:create",
      "edit_form": "form:contact:district_hospital:edit"
    },
    {
      "id": "health_center",
      "name_key": "contact.type.health_center",
      "group_key": "contact.type.health_center.plural",
      "create_key": "contact.type.health_center.new",
      "edit_key": "contact.type.place.edit",
      "parents": [
        "district_hospital"
      ],
      "icon": "medic-health-center",
      "create_form": "form:contact:health_center:create",
      "edit_form": "form:contact:health_center:edit"
    },
    {
      "id": "clinic",
      "name_key": "contact.type.clinic",
      "group_key": "contact.type.clinic.plural",
      "create_key": "contact.type.clinic.new",
      "edit_key": "contact.type.place.edit",
      "parents": [
        "health_center"
      ],
      "icon": "medic-clinic",
      "create_form": "form:contact:clinic:create",
      "edit_form": "form:contact:clinic:edit",
      "count_visits": true
    },
    {
      "id": "person",
      "name_key": "contact.type.person",
      "group_key": "contact.type.person.plural",
      "create_key": "contact.type.person.new",
      "edit_key": "contact.type.person.edit",
      "primary_contact_key": "clinic.field.contact",
      "parents": [
        "district_hospital",
        "health_center",
        "clinic"
      ],
      "icon": "medic-person",
      "create_form": "form:contact:person:create",
      "edit_form": "form:contact:person:edit",
      "person": true
    }
  ]
}
